const { toMatchImageSnapshot } = require('jest-image-snapshot') 
expect.extend({ toMatchImageSnapshot });

/**
 * Generated by https://github.com/dsheiko/puppetry
 * on Tue Oct 22 2019 10:00:37 GMT+0100 (BST)
 * Suite: EMM Pages
 */

var nVer = process.version.match( /^v(\d+)/ );
if ( !nVer || nVer[ 1 ] < 9 ) {
  console.error( "WARNING: You have an outdated Node.js version " + process.version
    + ". You need at least v.9.x to run this test suite." );
}


const {
        bs, util, fetch, localStorage
      } = require( "../lib/bootstrap" )( "EMM--Pages" ),
      devices = require( "puppeteer/DeviceDescriptors" );



jest.setTimeout( 50000 );

util.cleanupScreenshotsDir();

// Environment variables
const ENV = {

};



describe( "Google Home Page", async () => {
  beforeAll(async () => {
    await bs.setup();
  });

  afterAll(async () => {
    await bs.teardown();
  });


  describe( "Google Web Page", async () => {

    test( "Page Visible", async () => {
      let result, assert;

      await bs.page.goto(
        "https://www.google.com",
        { "timeout": 30000, "waitUntil": "networkidle0" }
      );
    

      // Defining browser viewport
      // "isMobile":true,"hasTouch":true,
      await bs.page.setViewport({
        "width": 1000,
        "height": 800,
      });

      // Taking screenshot of the page
      //await bs.page.screenshot( util.png( "Initial Page", {"fullPage":true,"omitBackground":true} ) );

      const image = await bs.page.screenshot({ fullPage: true, omitBackground: true });
      expect(image).toMatchImageSnapshot({
        noColors: true,
      }); 
      
      // Asserting that page title satisfies the given constraint
      result = await bs.page.title();       
      expect( result ).toBeEqual( "Google", "page.assertTitle" );
    });

  });

});
